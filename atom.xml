<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="https://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-11-13T02:35:31.266Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>������i</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>jsp实现用户登录</title>
    <link href="http://yoursite.com/2019/11/11/jsp%E5%AE%9E%E7%8E%B0%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95/"/>
    <id>http://yoursite.com/2019/11/11/jsp%E5%AE%9E%E7%8E%B0%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95/</id>
    <published>2019-11-11T10:59:20.000Z</published>
    <updated>2019-11-13T02:35:31.266Z</updated>
    
    <content type="html"><![CDATA[<p>*** Eclipse中创建Dynamic  Web  Project</p><p>在java Resource中创建一个包，用来放类和接口</p><p>此处创建一个com.jdbc.login包</p><ul><li><h6 id="创建一个JdbcUtil-java驱动连接数据库："><a href="#创建一个JdbcUtil-java驱动连接数据库：" class="headerlink" title="创建一个JdbcUtil.java驱动连接数据库："></a>创建一个JdbcUtil.java驱动连接数据库：</h6></li></ul><p>代码如下：</p><p><strong>要注意的是连接本地数据库，本地端口，用户名，密码一定不要弄错！！！</strong></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jdbc.login;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcUtil</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> String  driver =<span class="string">"com.mysql.jdbc.Driver"</span>;<span class="comment">//数据库驱动类</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String  url =<span class="string">"jdbc:mysql://localhost:3306/stuinfo"</span>;<span class="comment">//  数据库链接</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String  user =<span class="string">"root"</span>;<span class="comment">// 数据库用户名</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String  password =<span class="string">"root"</span>;<span class="comment">// 数据库密码</span></span><br><span class="line">     </span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 权限修饰符  静态修饰符   返回值类型  方法名称</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取链接的</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> conn</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span> </span>{</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            <span class="comment">//1. 类加载</span></span><br><span class="line">            Class.forName(driver);</span><br><span class="line">            <span class="comment">//2. 驱动管理获取链接\三个参数\  接收</span></span><br><span class="line">            Connection conn = DriverManager.getConnection(url, user, password);</span><br><span class="line">            <span class="keyword">return</span> conn;</span><br><span class="line">             </span><br><span class="line">        } <span class="keyword">catch</span> (Exception e) {</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">// TODO 关闭链接没写</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li><h6 id="在User类中封装四个变量，分别是id，username（用户名），password（密码），sex（性别）-代码如下："><a href="#在User类中封装四个变量，分别是id，username（用户名），password（密码），sex（性别）-代码如下：" class="headerlink" title="在User类中封装四个变量，分别是id，username（用户名），password（密码），sex（性别）,代码如下："></a>在User类中封装四个变量，分别是id，username（用户名），password（密码），sex（性别）,代码如下：</h6></li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jdbc.login;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> Integer id;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    }</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    }</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUsername</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> username;</span><br><span class="line">    }</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsername</span><span class="params">(String username)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.username = username;</span><br><span class="line">    }</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    }</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.password = password;</span><br><span class="line">    }</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getSex</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> sex;</span><br><span class="line">    }</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSex</span><span class="params">(String sex)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.sex = sex;</span><br><span class="line">    }</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"User [id="</span> + id + <span class="string">", username="</span> + username + <span class="string">", password="</span></span><br><span class="line">                + password + <span class="string">", sex="</span> + sex + <span class="string">"]"</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li><h6 id="创建接口UserDao-传递参数-代码如下："><a href="#创建接口UserDao-传递参数-代码如下：" class="headerlink" title="创建接口UserDao,传递参数,代码如下："></a>创建接口UserDao,传递参数,代码如下：</h6></li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jdbc.login;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>{</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用户登录功能</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> username 参数  为用户名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> password 参数 为密码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span>  user</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">User <span class="title">login</span><span class="params">(String username , String password)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li><h6 id="创建UserDaolmpl类，将本地输入的账号和密码传过来，代码如下："><a href="#创建UserDaolmpl类，将本地输入的账号和密码传过来，代码如下：" class="headerlink" title="创建UserDaolmpl类，将本地输入的账号和密码传过来，代码如下："></a>创建UserDaolmpl类，将本地输入的账号和密码传过来，代码如下：</h6></li><li>在你所连接的数据库中创建一个表，命名为user，表结构为id：主键，非空，intrger型；username：非空，varchar(50);password:非空，varchar(50);sex:非空，varchar(10)</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jdbc.login;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title">UserDao</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 通过传值把本地输入的账号和密码穿过来</span></span><br><span class="line"><span class="comment"> * username--&gt;用户输入的账号</span></span><br><span class="line"><span class="comment"> * password--&gt;用户输入的密码</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">login</span><span class="params">(String username, String password)</span> </span>{</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> {</span><br><span class="line"></span><br><span class="line">Connection con = JdbcUtil.getConnection();</span><br><span class="line"></span><br><span class="line">Statement st = con.createStatement();</span><br><span class="line"></span><br><span class="line">ResultSet rs = st</span><br><span class="line">.executeQuery(<span class="string">"select * from  user  where username = '"</span></span><br><span class="line">+ username + <span class="string">"'  and password = '"</span> + password</span><br><span class="line">+ <span class="string">"';"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (rs.next()) {</span><br><span class="line">User user = <span class="keyword">new</span> User();</span><br><span class="line"></span><br><span class="line">user.setUsername(rs.getString(<span class="string">"username"</span>));</span><br><span class="line">user.setPassword(rs.getString(<span class="string">"password"</span>));</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"userDao中的user的内容是"</span> + user);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> user;</span><br><span class="line">} <span class="keyword">else</span> {</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">} <span class="keyword">catch</span> (SQLException e) {</span><br><span class="line"><span class="comment">// throw new UserLoginException();</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li><h6 id="创建UserLoginServlet类，获取jsp界面输入的值传给servlet-代码如下："><a href="#创建UserLoginServlet类，获取jsp界面输入的值传给servlet-代码如下：" class="headerlink" title="创建UserLoginServlet类，获取jsp界面输入的值传给servlet,代码如下："></a>创建UserLoginServlet类，获取jsp界面输入的值传给servlet,代码如下：</h6></li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jdbc.login;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.regexp.internal.recompile;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * servlet相应的java代码</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserLoginServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> ServletException, IOException </span>{</span><br><span class="line"> </span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * 1 改变编码格式</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        response.setContentType(<span class="string">"text/html"</span>);</span><br><span class="line">        response.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line">        request.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line">         </span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * 2. 获取jsp界面输入的账号和密码---&gt;本地输入的账号和密码</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        String username = request.getParameter(<span class="string">"username"</span>);</span><br><span class="line">        String password = request.getParameter(<span class="string">"password"</span>);</span><br><span class="line">     </span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * 3. 将获取到的用户名和密码传递给 userService!</span></span><br><span class="line"><span class="comment">         * 所以得有 userService没有怎么办?  实例化 就有了 </span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        UserService userService = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line">         </span><br><span class="line">        User u = userService.userLogin(username, password);</span><br><span class="line">         </span><br><span class="line">        <span class="keyword">if</span>(u == <span class="keyword">null</span>){</span><br><span class="line">            response.getWriter().write(<span class="string">"您的用户名或密码有误，请检查！"</span>);</span><br><span class="line">        }<span class="keyword">else</span>{</span><br><span class="line">        response.getWriter().write(<span class="string">"用户登录成功！"</span>);</span><br><span class="line">        }</span><br><span class="line">     </span><br><span class="line">    }</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> ServletException, IOException </span>{</span><br><span class="line">        doGet( request,  response);</span><br><span class="line">    }</span><br><span class="line">  </span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li><h6 id="创建接口UserService，传递参数-代码如下："><a href="#创建接口UserService，传递参数-代码如下：" class="headerlink" title="创建接口UserService，传递参数,代码如下："></a>创建接口UserService，传递参数,代码如下：</h6></li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jdbc.login;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>{</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 用户登录功能</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> username 参数  为用户名</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> password 参数 为密码</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span>  user</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="function">User <span class="title">userLogin</span><span class="params">(String username , String password)</span></span>;</span><br><span class="line"></span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li><h6 id="创建UserServiceImpl类继承UserService，代码如下："><a href="#创建UserServiceImpl类继承UserService，代码如下：" class="headerlink" title="创建UserServiceImpl类继承UserService，代码如下："></a>创建UserServiceImpl类继承UserService，代码如下：</h6></li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jdbc.login;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>{</span><br><span class="line">    </span><br><span class="line">   <span class="comment">// 采用多态的形式进行实例化dao  </span></span><br><span class="line">   UserDao dao = <span class="keyword">new</span>  UserDaoImpl();</span><br><span class="line">    </span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> User <span class="title">userLogin</span><span class="params">(String username, String password)</span> </span>{</span><br><span class="line">       <span class="comment">//dao代表的是UserDao 这个接口</span></span><br><span class="line">   <span class="comment">//.login  用这个接口中的用户登录功能  并且传了两个参数给你</span></span><br><span class="line">       <span class="keyword">return</span> dao.login(username, password);</span><br><span class="line">   }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li><h6 id="在-UsersLoginDemo-WebContent下创建index-jsp文件"><a href="#在-UsersLoginDemo-WebContent下创建index-jsp文件" class="headerlink" title="在/UsersLoginDemo/WebContent下创建index.jsp文件,"></a>在/UsersLoginDemo/WebContent下创建index.jsp文件,</h6><p>代码如下：</p></li></ul><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">"java"</span> <span class="keyword">import</span>=<span class="string">"java.util.*"</span> pageEncoding=<span class="string">"UTF-8"</span>%&gt;</span><br><span class="line">&lt;%</span><br><span class="line">String path = request.getContextPath();</span><br><span class="line">String basePath = request.getScheme() + <span class="string">"://"</span> + request.getServerName() + <span class="string">":"</span> + request.getServerPort()</span><br><span class="line">+ path + <span class="string">"/"</span>;</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE HTML PUBLIC <span class="string">"-//W3C//DTD HTML 4.01 Transitional//EN"</span>&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;base href=<span class="string">"&lt;%=basePath%&gt;"</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;title&gt;My JSP 'index.jsp' starting page&lt;/title&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">"pragma"</span> content=<span class="string">"no-cache"</span>&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">"cache-control"</span> content=<span class="string">"no-cache"</span>&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">"expires"</span> content=<span class="string">"0"</span>&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">"keywords"</span> content=<span class="string">"keyword1,keyword2,keyword3"</span>&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">"description"</span> content=<span class="string">"This is my page"</span>&gt;</span><br><span class="line">&lt;!--</span><br><span class="line">&lt;link rel=<span class="string">"stylesheet"</span> type=<span class="string">"text/css"</span> href=<span class="string">"styles.css"</span>&gt;</span><br><span class="line">--&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;center&gt;</span><br><span class="line">&lt;form action=<span class="string">"&lt;%=basePath%&gt;servlet/UserLoginServlet"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">&lt;table border=<span class="string">"1px"</span> width=<span class="string">"438px"</span>&gt;</span><br><span class="line">&lt;tr align=<span class="string">"center"</span>&gt;</span><br><span class="line">&lt;td&gt;用户名&lt;/td&gt;</span><br><span class="line">&lt;td&gt;&lt;input type="text" name="username"&gt;&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;tr align=<span class="string">"center"</span>&gt;</span><br><span class="line">&lt;td&gt;密码&lt;/td&gt;</span><br><span class="line">&lt;td&gt;&lt;input type="password" name="password"&gt;&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;tr align=<span class="string">"center"</span>&gt;</span><br><span class="line">&lt;td colspan=<span class="string">"2"</span>&gt;&lt;input type=<span class="string">"submit"</span> value=<span class="string">"用户登录"</span>&gt; &lt;input</span><br><span class="line">type="reset" value="重置内容"&gt;&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/center&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></tbody></table></figure><ul><li><h6 id="最后一点就是在-UsersLoginDemo-WebContent-WEB-INF-lib下创建web-xml（我也不太明白，但是老师就是这样讲的哈哈哈）代码如下："><a href="#最后一点就是在-UsersLoginDemo-WebContent-WEB-INF-lib下创建web-xml（我也不太明白，但是老师就是这样讲的哈哈哈）代码如下：" class="headerlink" title="最后一点就是在/UsersLoginDemo/WebContent/WEB-INF/lib下创建web.xml（我也不太明白，但是老师就是这样讲的哈哈哈）代码如下："></a>最后一点就是在/UsersLoginDemo/WebContent/WEB-INF/lib下创建web.xml（我也不太明白，但是老师就是这样讲的哈哈哈）代码如下：</h6></li></ul><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xmlns</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee"</span> <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"</span> <span class="attr">id</span>=<span class="string">"WebApp_ID"</span> <span class="attr">version</span>=<span class="string">"3.1"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>UserLoginDemo<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.html<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.htm<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>default.html<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>default.htm<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>default.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>UserLoginServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.jdbc.login.UserLoginServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>UserLoginServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/servlet/UserLoginServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;*** Eclipse中创建Dynamic  Web  Project&lt;/p&gt;
&lt;p&gt;在java Resource中创建一个包，用来放类和接口&lt;/p&gt;
&lt;p&gt;此处创建一个com.jdbc.login包&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h6 id=&quot;创建一个JdbcUtil-ja
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>jsp内置对象</title>
    <link href="http://yoursite.com/2019/11/08/jsp%E5%86%85%E7%BD%AE%E5%AF%B9%E8%B1%A1/"/>
    <id>http://yoursite.com/2019/11/08/jsp%E5%86%85%E7%BD%AE%E5%AF%B9%E8%B1%A1/</id>
    <published>2019-11-08T05:37:29.000Z</published>
    <updated>2019-11-13T02:35:31.266Z</updated>
    
    <content type="html"><![CDATA[<hr><p>jsp提供了由容器实现和管理的内置对象，也可以称之为隐含对象，由于JSP使用Java作为脚本语言，所以JSP将具有强大的对象处理能力，并且可以动态创建Web页面内容。<br><strong>在JSP中一共预先定义了9个这样的对象，分别为request、response、session、application、out、pageContext、config、page和exception。</strong></p><table><thead><tr><th>内置对象</th><th>类型</th></tr></thead><tbody><tr><td>request</td><td>javax.servlet.http.HttpServletRequest</td></tr><tr><td>response</td><td>javax.servet.ttp.HttpServletResponse</td></tr><tr><td>session</td><td>javax.servlet.http.HttpSession</td></tr><tr><td>application</td><td>javax.servlet. SerletContext</td></tr><tr><td>out</td><td>javax.servlet.jsp. JspWriter</td></tr><tr><td>pageContext</td><td>javax.servlet.jsp. PageContext</td></tr><tr><td>config</td><td>javax. servlet ServletConfig</td></tr><tr><td>page</td><td>javax. servletjsp.JspPage</td></tr><tr><td>exception</td><td>javax.serletjsp.JspException</td></tr></tbody></table><h3 id="request对象"><a href="#request对象" class="headerlink" title="request对象"></a>request对象</h3><p>客户端生成的一次网络请求的细节，一段文字信息（包括HTTP头信息、系统信息、请求方式和请求参数等）。</p><p><strong>用户登录信息示例：</strong></p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">"java"</span> <span class="attr">import</span>=<span class="string">"java.util.*"</span> <span class="attr">pageEncoding</span>=<span class="string">"UTF-8"</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag"><span class="attr">String</span> <span class="attr">path</span> = <span class="string">request.getContextPath();</span></span></span><br><span class="line"><span class="tag"><span class="attr">String</span> <span class="attr">basePath</span> = <span class="string">request.getScheme()+</span>"<span class="attr">:</span>//"+<span class="attr">request.getServerName</span>()+"<span class="attr">:</span>"+<span class="attr">request.getServerPort</span>()+<span class="attr">path</span>+"/";</span></span><br><span class="line"><span class="tag">%&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">base</span> <span class="attr">href</span>=<span class="string">"&lt;%=basePath%&gt;"</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>My JSP 'index.jsp' starting page<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"pragma"</span> <span class="attr">content</span>=<span class="string">"no-cache"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"cache-control"</span> <span class="attr">content</span>=<span class="string">"no-cache"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"expires"</span> <span class="attr">content</span>=<span class="string">"0"</span>&gt;</span>    </span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"keywords"</span> <span class="attr">content</span>=<span class="string">"keyword1,keyword2,keyword3"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"description"</span> <span class="attr">content</span>=<span class="string">"This is my page"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">&lt;link rel="stylesheet" type="text/css" href="styles.css"&gt;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>用户登录<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">form</span> <span class="attr">name</span>=<span class="string">"loginForm"</span> <span class="attr">action</span>=<span class="string">"&lt;%=basePath%&gt;/servlet/Login"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>用户名：<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>密码：<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">     </span><br><span class="line">     <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"登录"</span>/&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p><em>用到了cookie</em>：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">"java"</span> <span class="attr">import</span>=<span class="string">"java.util.*,java.net.*"</span> <span class="attr">contentType</span>=<span class="string">"text/html; charset=utf-8"</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag"><span class="attr">String</span> <span class="attr">path</span> = <span class="string">request.getContextPath();</span></span></span><br><span class="line"><span class="tag"><span class="attr">String</span> <span class="attr">basePath</span> = <span class="string">request.getScheme()+</span>"<span class="attr">:</span>//"+<span class="attr">request.getServerName</span>()+"<span class="attr">:</span>"+<span class="attr">request.getServerPort</span>()+<span class="attr">path</span>+"/";</span></span><br><span class="line"><span class="tag">%&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="meta">&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">base</span> <span class="attr">href</span>=<span class="string">"&lt;%=basePath%&gt;"</span> <span class="attr">rel</span>=<span class="string">"external nofollow"</span> <span class="attr">rel</span>=<span class="string">"external nofollow"</span> <span class="attr">rel</span>=<span class="string">"external nofollow"</span> &gt;</span></span><br><span class="line">   </span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>My JSP 'dologin.jsp' starting page<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">   </span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"pragma"</span> <span class="attr">content</span>=<span class="string">"no-cache"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"cache-control"</span> <span class="attr">content</span>=<span class="string">"no-cache"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"expires"</span> <span class="attr">content</span>=<span class="string">"0"</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"keywords"</span> <span class="attr">content</span>=<span class="string">"keyword1,keyword2,keyword3"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"description"</span> <span class="attr">content</span>=<span class="string">"This is my page"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    &lt;link rel="stylesheet" type="text/css" href="styles.css" rel="external nofollow" rel="external nofollow" rel="external nofollow" &gt;</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">  </span><br><span class="line"> <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"> <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>登录成功<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag">    <span class="attr">request.setCharacterEncoding</span>("<span class="attr">utf-8</span>");</span></span><br><span class="line"><span class="tag">    //首先判断用户是否选择了记住登录状态</span></span><br><span class="line"><span class="tag">    <span class="attr">String</span>[] <span class="attr">isUseCookies</span> = <span class="string">request.getParameterValues(</span>"<span class="attr">isUseCookie</span>");</span></span><br><span class="line"><span class="tag">    <span class="attr">if</span>(<span class="attr">isUseCookies</span>!=<span class="string">null&amp;&amp;isUseCookies.length</span>&gt;</span>0)</span><br><span class="line">    {</span><br><span class="line">     //把用户名和密码保存在Cookie对象里面</span><br><span class="line">     String username = URLEncoder.encode(request.getParameter("username"),"utf-8");</span><br><span class="line">     //使用URLEncoder解决无法在Cookie当中保存中文字符串问题</span><br><span class="line">     String password = URLEncoder.encode(request.getParameter("password"),"utf-8");</span><br><span class="line">      </span><br><span class="line">     Cookie usernameCookie = new Cookie("username",username);</span><br><span class="line">     Cookie passwordCookie = new Cookie("password",password);</span><br><span class="line">     usernameCookie.setMaxAge(864000);</span><br><span class="line">     passwordCookie.setMaxAge(864000);//设置最大生存期限为10天</span><br><span class="line">     response.addCookie(usernameCookie);</span><br><span class="line">     response.addCookie(passwordCookie);</span><br><span class="line">    }</span><br><span class="line">    else</span><br><span class="line">    {</span><br><span class="line">     Cookie[] cookies = request.getCookies();</span><br><span class="line">     if(cookies!=null&amp;&amp;cookies.length&gt;0)</span><br><span class="line">     {</span><br><span class="line">       for(Cookie c:cookies)</span><br><span class="line">       {</span><br><span class="line">        if(c.getName().equals("username")||c.getName().equals("password"))</span><br><span class="line">        {</span><br><span class="line">          c.setMaxAge(0); //设置Cookie失效</span><br><span class="line">          response.addCookie(c); //重新保存。</span><br><span class="line">        }</span><br><span class="line">       }</span><br><span class="line">     }</span><br><span class="line">    }</span><br><span class="line">  %&gt;</span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"Users.jsp"</span> <span class="attr">rel</span>=<span class="string">"external nofollow"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>查看用户信息<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">   </span><br><span class="line"> <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;p&gt;jsp提供了由容器实现和管理的内置对象，也可以称之为隐含对象，由于JSP使用Java作为脚本语言，所以JSP将具有强大的对象处理能力，并且可以动态创建Web页面内容。&lt;br&gt;&lt;strong&gt;在JSP中一共预先定义了9个这样的对象，分别为request、respon
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Vue学习</title>
    <link href="http://yoursite.com/2019/11/01/Vue%E5%AD%A6%E4%B9%A0/"/>
    <id>http://yoursite.com/2019/11/01/Vue%E5%AD%A6%E4%B9%A0/</id>
    <published>2019-11-01T08:22:28.000Z</published>
    <updated>2019-11-13T02:35:31.266Z</updated>
    
    <content type="html"><![CDATA[<h3 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h3><p>在线引用Vue</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">### </span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.staticfile.org/vue/2.2.2/vue.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"css/new_file.css"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"demo"</span>&gt;</span></span><br><span class="line">{{name}}</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"name"</span> /&gt;</span> <span class="comment">&lt;!--双向数据绑定--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">"img"</span> <span class="attr">width</span>=<span class="string">"200px"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">"img"</span> <span class="attr">width</span>=<span class="string">"200px"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">"img"</span> <span class="attr">width</span>=<span class="string">"200px"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">"img"</span> <span class="attr">width</span>=<span class="string">"200px"</span> /&gt;</span></span><br><span class="line">{{message}}</span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">v-html</span>=<span class="string">"message"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">v-if</span>=<span class="string">"ifs"</span>&gt;</span>{{name}}<span class="tag">&lt;/<span class="name">span</span>&gt;</span>  <span class="comment">&lt;!--//插入标签--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">v-else</span>=<span class="string">""</span>&gt;</span>{{message}}<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">v-show</span>=<span class="string">"show"</span>&gt;</span>{{name}}<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="comment">&lt;!-- //隐藏--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">v-for</span>=<span class="string">"(i,c) in todus"</span>&gt;</span>{{i}}{{c}}<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">"show=true"</span>&gt;</span>点击<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">"show=false"</span>&gt;</span>点击<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;button @click="show=true"&gt;点击&lt;/button&gt;</span></span><br><span class="line"><span class="comment">&lt;button @click="show=false"&gt;点击&lt;/button&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">:class</span>=<span class="string">"cs"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;div :id="ids"&gt;&lt;/div&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;div class=['cs','ccs']&gt;5678&lt;/div&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;div :class={'cs',show}&gt;fhdu&lt;/div&gt;</span></span><br><span class="line"><span class="comment">&lt;div :class=[cs,ccs]&gt;999感冒灵颗粒&lt;/div&gt;</span></span><br><span class="line"><span class="comment">&lt;div :class=(show?'cs':'ccs')&gt;红霉素软胶囊&lt;/div&gt;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">:style</span>=<span class="string">obj</span>&gt;</span>sxjdhucbe<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">:style</span>=<span class="string">[obj,objs]</span>&gt;</span>回顾 r<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">单价：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">v-model</span>=<span class="string">"price"</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">数量：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">v-model</span>=<span class="string">"num"</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">总价：{{price*num}}<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">属性监听总价：{{sum}}<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">计算属性总价：{{total}}<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">普通方法总计：{{totals()}}<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">:src</span>=<span class="string">"name"</span> <span class="attr">controls</span>=<span class="string">"controls"</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​</span><br></pre></td></tr></tbody></table></figure><script type="text/javascript" src="js/new_file.js"></script>​<figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></tbody></table></figure><h3 id="js文件中"><a href="#js文件中" class="headerlink" title="js文件中"></a>js文件中</h3><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> jsons={</span><br><span class="line">code: <span class="number">200</span>,</span><br><span class="line">message: <span class="string">"成功!"</span>,</span><br><span class="line">result: [{</span><br><span class="line">sid: <span class="string">"29875521"</span>,</span><br><span class="line">text: <span class="string">"一句这呢全场最大最响的包袱"</span>,</span><br><span class="line">video: <span class="string">"http://uvideo.spriteapp.cn/video/2019/1023/5daf6ea50d6a2_wpd.mp4"</span>,</span><br><span class="line">}]</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> vue=<span class="keyword">new</span> Vue({</span><br><span class="line">el:<span class="string">"#demo"</span>,<span class="comment">//对应的ID地址和class地址</span></span><br><span class="line">data:{</span><br><span class="line">name:jsons.result[<span class="number">0</span>].video,</span><br><span class="line">img:<span class="string">"img/tx.jpg"</span>,</span><br><span class="line">message:<span class="string">'&lt;h1&gt;vue nb&lt;/h1&gt;'</span>,</span><br><span class="line">ifs:<span class="literal">true</span>,</span><br><span class="line">show:<span class="literal">false</span>,</span><br><span class="line">todus:[<span class="string">"孙悟空"</span>,<span class="string">"猪八戒"</span>,<span class="string">"沙悟净"</span>,<span class="string">"唐三藏"</span>],</span><br><span class="line">ids:<span class="string">"ids"</span>,</span><br><span class="line">cs:<span class="string">"cs"</span>,</span><br><span class="line">obj:{</span><br><span class="line">color:<span class="string">"red"</span>,</span><br><span class="line">},</span><br><span class="line">objs:{</span><br><span class="line">fontSize:<span class="string">"20px"</span>,</span><br><span class="line">},</span><br><span class="line">price:<span class="string">""</span>,</span><br><span class="line">num:<span class="string">""</span>,</span><br><span class="line">sum:<span class="string">""</span></span><br><span class="line">},</span><br><span class="line">watch:{</span><br><span class="line">price:<span class="function"><span class="keyword">function</span>(<span class="params">newValue</span>)</span>{</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"price"</span>)</span><br><span class="line"><span class="keyword">this</span>.sum=newValue*<span class="keyword">this</span>.num;</span><br><span class="line">},</span><br><span class="line">num:<span class="function"><span class="keyword">function</span>(<span class="params">newValue</span>)</span>{</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"num"</span>)</span><br><span class="line"><span class="keyword">this</span>.sum=newValue*<span class="keyword">this</span>.price;</span><br><span class="line">}</span><br><span class="line">},</span><br><span class="line">computed:{</span><br><span class="line">total:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"计算属性"</span>)</span><br><span class="line"><span class="keyword">let</span> sum=<span class="keyword">this</span>.num*<span class="keyword">this</span>.price;</span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">}</span><br><span class="line">},</span><br><span class="line">methods:{</span><br><span class="line">totals:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"普通方法"</span>)</span><br><span class="line"><span class="keyword">let</span> sum=<span class="keyword">this</span>.num*<span class="keyword">this</span>.price;</span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line">})</span><br></pre></td></tr></tbody></table></figure><h4 id="计算属性"><a href="#计算属性" class="headerlink" title="计算属性"></a>计算属性</h4><p>•v-on  事件属性</p><p>•V-bind:class    类属性</p><p>•动态class添加与改变</p><p>•属性中使用双目运算符</p><h4 id="Vue中大多内容都可以进行属性计算的"><a href="#Vue中大多内容都可以进行属性计算的" class="headerlink" title="Vue中大多内容都可以进行属性计算的"></a>Vue中大多内容都可以进行属性计算的</h4><p>–可进行数学计算，逻辑运算等</p><p>•使用方法</p><p>•例1：68，false 返回true或false</p><p>•例2：v-if=“20&gt;30”,v-show=“30&lt;20“  ，返回计算结果</p><h4 id="V-on事件"><a href="#V-on事件" class="headerlink" title="V-on事件"></a>V-on事件</h4><p>•作用：给节点添加事件</p><p>•使用方法：</p><p>  V-on:事件名称=(执行内容)</p><p>  例如利用点击事件将v-if条件更改</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">"ifshow=true"</span>&gt;</span>button<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>  <p v-if="ifshow">我是动态创建</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span>=<span class="string">"ifShow"</span>&gt;</span>我是动态创建<span class="tag">&lt;<span class="name">p</span>/&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>简便写法：</p><p>  @:事件名称=（执行内容）</p><h4 id="V-bind-class"><a href="#V-bind-class" class="headerlink" title="V-bind:class"></a>V-bind:class</h4><p>•作用：为类添加属性</p><p>•使用方法：</p><p>–分为类添加和id添加</p><p>•V-bind:class</p><p>–例：V-bind:class(插值内容)</p><p>•V-bind:id</p><p>–例：v-bind:Id(插值内容)</p><p>–简便写法：</p><p>•:class()</p><p>•:id()</p><h4 id="动态class添加与改变"><a href="#动态class添加与改变" class="headerlink" title="动态class添加与改变"></a>动态class添加与改变</h4><p>•对象写法</p><p>–如果isshow为true则添加active样式</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">–<span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"ccc"</span> <span class="attr">:class</span>=<span class="string">{active:isshow}</span>&gt;</span>{{name}}<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>–</p><p>•数组写法</p><p>–所有的类名都被添加</p><p>–</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"ccc"</span> <span class="attr">:class</span>=<span class="string">[</span>'<span class="attr">aaa</span>','<span class="attr">bbb</span>']&gt;</span>{{name}}<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>–</p><p>•数组变量写法，可以通过后台控制class名</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">– <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"ccc"</span> <span class="attr">:class</span>=<span class="string">[who,who1]</span>&gt;</span>{{name}}控制台改变变量<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h4 id="双目运算符"><a href="#双目运算符" class="headerlink" title="双目运算符"></a>双目运算符</h4><p>•作用：当一个属性需要有两个不同的表现方式时使用</p><p>•用法:以类改变举例：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">–:class(ifshow?'aaa':'bbb')</span><br></pre></td></tr></tbody></table></figure><p>–aaa,bbb均为提前写好的样式</p><p>–当ifshow为true时执行aaa,反之执行bbb</p><h3 id="Ajax请求"><a href="#Ajax请求" class="headerlink" title="Ajax请求"></a>Ajax请求</h3><p>利用接口调用网上的数据</p><p>代码示例</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.staticfile.org/axios/0.18.0/axios.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.staticfile.org/vue/2.2.2/vue.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"css/ajax.css"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"ajax"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--{{endGetByStr()}}--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span>  <span class="attr">v-model</span>=<span class="string">"value"</span>  /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"endGetByStr()"</span>&gt;</span>搜索歌曲/作者<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">v-for</span>=<span class="string">"i in shuju"</span> <span class="attr">class</span>=<span class="string">"neirong"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"name"</span>&gt;</span>{{i.author}}<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span>{{i.title}}<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">"i.pic"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">:src</span>=<span class="string">"i.url"</span> <span class="attr">controls</span>=<span class="string">"controls"</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"js/ajax.js"</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h4 id="在css文件中简单设置样式"><a href="#在css文件中简单设置样式" class="headerlink" title="在css文件中简单设置样式"></a>在css文件中简单设置样式</h4><p>有适配效果：</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*适配*/</span></span><br><span class="line">@<span class="keyword">media</span> only screen and (min-width: <span class="number">0px</span>) and (max-width:<span class="number">800px</span>){</span><br><span class="line"><span class="selector-id">#ajax</span> <span class="selector-class">.neirong</span>{</span><br><span class="line"><span class="attribute">width</span>: <span class="number">50%</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">@<span class="keyword">media</span> only screen and (min-width: <span class="number">0px</span>) and (max-width:<span class="number">500px</span>){</span><br><span class="line"><span class="selector-id">#ajax</span> <span class="selector-class">.neirong</span>{</span><br><span class="line"><span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#ajax</span> <span class="selector-class">.neirong</span>{</span><br><span class="line"><span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line"><span class="attribute">display</span>: block;</span><br><span class="line"><span class="attribute">border-bottom</span>: <span class="number">1px</span> solid gainsboro;</span><br><span class="line"><span class="attribute">overflow</span>: hidden;</span><br><span class="line"><span class="attribute">float</span>: left;</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#ajax</span> <span class="selector-class">.name</span>{</span><br><span class="line"><span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line"><span class="attribute">color</span>: aqua;</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#ajax</span> <span class="selector-tag">img</span>{</span><br><span class="line"><span class="attribute">border-radius</span>: <span class="number">50px</span>;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">}</span><br><span class="line"><span class="comment">/*适配*/</span></span><br><span class="line">@<span class="keyword">media</span> only screen and (min-width: <span class="number">0px</span>) and (max-width:<span class="number">800px</span>){</span><br><span class="line"><span class="selector-id">#ajax</span> <span class="selector-class">.neirong</span>{</span><br><span class="line"><span class="attribute">width</span>: <span class="number">50%</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">@<span class="keyword">media</span> only screen and (min-width: <span class="number">0px</span>) and (max-width:<span class="number">500px</span>){</span><br><span class="line"><span class="selector-id">#ajax</span> <span class="selector-class">.neirong</span>{</span><br><span class="line"><span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="js代码"><a href="#js代码" class="headerlink" title="js代码"></a>js代码</h3><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> ajax=<span class="keyword">new</span> Vue({</span><br><span class="line">el:<span class="string">"#ajax"</span>,</span><br><span class="line">data:{</span><br><span class="line">shuju:<span class="string">"这里是数据"</span>,</span><br><span class="line">value:<span class="string">""</span>,</span><br><span class="line">},</span><br><span class="line">methods:{</span><br><span class="line">endGetByStr:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line">            <span class="comment">//1.get通过直接发字符串拼接</span></span><br><span class="line"><span class="comment">//          axios.get(`get.php?name=${this.users.name}&amp;age=${this.users.name}`)</span></span><br><span class="line"><span class="keyword">let</span> datas=<span class="keyword">this</span>;</span><br><span class="line">axios.get(<span class="string">"https://api.apiopen.top/searchMusic?name="</span>,{</span><br><span class="line">params:{</span><br><span class="line"><span class="comment">//</span></span><br><span class="line">name:<span class="keyword">this</span>.value,</span><br><span class="line">}</span><br><span class="line">})</span><br><span class="line">              .then(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>{</span><br><span class="line"><span class="comment">//              alert(response.data.result[1].author);</span></span><br><span class="line">               datas.shuju=response.data.result</span><br><span class="line">                </span><br><span class="line">              })</span><br><span class="line">              .catch(<span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>{</span><br><span class="line">                alert(<span class="string">"error"</span>);</span><br><span class="line">            });</span><br><span class="line">            </span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line">})</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;代码示例&quot;&gt;&lt;a href=&quot;#代码示例&quot; class=&quot;headerlink&quot; title=&quot;代码示例&quot;&gt;&lt;/a&gt;代码示例&lt;/h3&gt;&lt;p&gt;在线引用Vue&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>jsp配置</title>
    <link href="http://yoursite.com/2019/10/30/jsp%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2019/10/30/jsp%E9%85%8D%E7%BD%AE/</id>
    <published>2019-10-30T03:11:12.000Z</published>
    <updated>2019-11-13T02:35:31.266Z</updated>
    
    <content type="html"><![CDATA[<h3 id="配置Tomcat服务器"><a href="#配置Tomcat服务器" class="headerlink" title="配置Tomcat服务器"></a>配置Tomcat服务器</h3><blockquote><p>第一步，在Myeclipse下打开MyEclipse/Preferences…（考拉这些截图都是在前几篇经验提到安装的软件上进行的）</p><p> <img src="D:%5Chexo%5Cblog%5Csource%5Cimages%5C1.png" alt="Image text"></p></blockquote><blockquote><p>第二步，在type filter text中输入Tomcat找到Tomcat。第一个图是将MyEclipse Tomcat 6设置为“Disable”；第二个图是将Tomcat/Tomcat 7.x设置为“Enable”，并且在Tomcat home directory设置安装目录Tomcat的安装位置。下面的directory会自动填充。</p></blockquote><blockquote><p><img src="D:%5Chexo%5Cblog%5Csource%5Cimages%5C2.png" alt="Image text"></p></blockquote><blockquote><p><img src="D:%5Chexo%5Cblog%5Csource%5Cimages%5C3.png" alt="Image text"></p></blockquote><blockquote><p>第三步，在Tomcat 7.x下的JDK中添加自己下好的。</p></blockquote><blockquote><p><img src="D:%5Chexo%5Cblog%5Csource%5Cimages%5C4.png" alt="Image text"></p></blockquote><blockquote><p><img src="D:%5Chexo%5Cblog%5Csource%5Cimages%5C5.png" alt="Image text"></p></blockquote><blockquote><p>第四步，相信我们一定能够在Servers视图看见Tomcat服务器项目了，而且在视图中可以启动或停止服务器。</p></blockquote><blockquote><p><img src="D:%5Chexo%5Cblog%5Csource%5Cimages%5C41.png" alt="Image text"></p></blockquote><h2 id="设置编码格式"><a href="#设置编码格式" class="headerlink" title="设置编码格式"></a>设置编码格式</h2><blockquote><p>第一步，在Myeclipse中打开Window/Preferences</p></blockquote><blockquote><p><img src="D:%5Chexo%5Cblog%5Csource%5Cimages%5C42.png" alt="Image text"></p></blockquote><blockquote><p>第二步，选择MyEclipse/File and Editors/JSP，将“Encoding”中设置为”ISO 10646/Unicode(UTF-8)”。接下来Apply，最后OK即可。</p></blockquote><blockquote><p><img src="D:%5Chexo%5Cblog%5Csource%5Cimages%5C51.png" alt="Image text"></p></blockquote><h3 id="编写一个简单的jsp，并运行"><a href="#编写一个简单的jsp，并运行" class="headerlink" title="编写一个简单的jsp，并运行"></a>编写一个简单的jsp，并运行</h3><blockquote><p>1.创建一个Project——选择File/New/Web Project</p></blockquote><blockquote><p><img src="D:%5Chexo%5Cblog%5Csource%5Cimages%5C52.png" alt="Image text"></p></blockquote><blockquote><p>2.设置工程属性——在打开的页面设置属性Project Name，即工程的名字。而接下来就是设置J2EE Specification Level为Java EE 6.0。其他默认，点击”Finish”即可。</p></blockquote><blockquote><p><img src="D:%5Chexo%5Cblog%5Csource%5Cimages%5C001.png" alt="Image text"></p></blockquote><blockquote><p>3.编写JSP文件——在创建了工新的工程后，已经存在了”index.jsp”。它是位于1.0/WebRoot/index.jsp目录下的（如第一个图）。index.jsp内容已经有了大致框架（如第二个图），接下来直接填充（如第三个图），考拉我就加入了一个简单的代码段。</p></blockquote><blockquote><p><img src="D:%5Chexo%5Cblog%5Csource%5Cimages%5C002.png" alt="Image text"></p></blockquote><blockquote><p><img src="D:%5Chexo%5Cblog%5Csource%5Cimages%5C004.png" alt="Image text"></p></blockquote><blockquote><p><img src="D:%5Chexo%5Cblog%5Csource%5Cimages%5C005.png" alt="Image text"></p></blockquote><blockquote><p>4.开启Tomcat7的服务——点击第一个图红圈圈中的标志，从而添加Tomcat服务。这个过程是在新的界面中点”Add”,在”Sever”下选择”Tomcat 7.x”,而location会自动添加目录。</p></blockquote><blockquote><p><img src="D:%5Chexo%5Cblog%5Csource%5Cimages%5C006.png" alt="Image text"></p></blockquote><blockquote><p><img src="D:%5Chexo%5Cblog%5Csource%5Cimages%5C007.png" alt="Image text"></p></blockquote><blockquote><p><img src="D:%5Chexo%5Cblog%5Csource%5Cimages%5C008.png" alt="Image text"></p></blockquote><blockquote><p><img src="D:%5Chexo%5Cblog%5Csource%5Cimages%5C009.png" alt="Image text"></p></blockquote><blockquote><p><img src="D:%5Chexo%5Cblog%5Csource%5Cimages%5C010.png" alt="Image text"></p></blockquote><blockquote><p>5.运行jsp程序——运行过程其实是点击上一步中红圈旁边的标记。（如下面下图所示）。如果跳出个提示框，那应该是问你是否保存已改变的工程，而你只需要确定即可。</p></blockquote><blockquote><p><img src="D:%5Chexo%5Cblog%5Csource%5Cimages%5C011.png" alt="Image text"></p></blockquote><blockquote><p>6.查看运行结果——在浏览器输入网址即可看到效果。考拉我目前的效果如图所示，而关于网址是多少，请看截图喔。</p></blockquote><blockquote><p><img src="D:%5Chexo%5Cblog%5Csource%5Cimages%5C012.png" alt="Image text"></p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;配置Tomcat服务器&quot;&gt;&lt;a href=&quot;#配置Tomcat服务器&quot; class=&quot;headerlink&quot; title=&quot;配置Tomcat服务器&quot;&gt;&lt;/a&gt;配置Tomcat服务器&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;第一步，在Myeclipse下打开MyEc
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>MySQL数据库管理与应用个人总结</title>
    <link href="http://yoursite.com/2019/10/17/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2019/10/17/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/</id>
    <published>2019-10-17T11:40:02.000Z</published>
    <updated>2019-11-13T02:35:31.266Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MySQL基础"><a href="#MySQL基础" class="headerlink" title="MySQL基础"></a>MySQL基础</h2><p><strong>与数据库有关的几个概念:</strong></p><p>1.数据(Data):可以被记录并拥有确切含义的已知事实。如:</p><pre><code>人的姓名。数据的种类很多，数字、文字、图形、声音等多种表现形式，都可以经过数字化后存入计算机。</code></pre><p>2.数据库(DataBase,简称DB):是一个相关数据的集合。如:</p><pre><code>学生数据库3.数据库管理系统(DataBase Management System，简称DBMS):帮助用户创建和管理数据库的应用程序的集合。如SQL Server、Oracle 、Access等。</code></pre><p>4.数据库系统(DataBase System, 简称DBS):一 般把数据</p><pre><code>库和DBMS软件合称为数据库系统。</code></pre><p>5.数据表(Table)(关系)</p><blockquote><p>一个数据库由若干数据表组成。<br>数 据表是一组相关联的数据按行和列排列的二维表格，每个数据表均有一个表名。</p></blockquote><p>6.字段(Field)(属性)</p><blockquote><p>表中的每一列数据称为一一个字段<br>字段名:每个字段的名称。</p></blockquote><p>7.记录(元组)</p><blockquote><p>表中的每一行称为一-条记录一个数据表是若干记录的集合。</p><img src="C:\Users\Administrator\Desktop\tab.png" style="zoom:50%;"></blockquote><p><strong>文件管理阶段的主要特点:</strong><br>1.辅助存储器成为计算机系统不可缺少的组成部分，,用来存入数据文件。</p><p>2.文件管理系统对驻留在外存储器上的数据文件实施统一管理。应用程序不再需要了解数据在存储介质上的实际地址及存放形式，从而大大减少了程序员的工作量。</p><p>3.数据文件可以重复利用，不再与某个应用程序绑在一起。<br>数据文件结构与程序之间的依赖关系并没有根本改变，因此<br>它的缺陷依然是存在的。</p><p>缺点;主要表现在程序和文件相互依存、数据冗余大、数据的<br>不一致性及不能反</p><p><strong>常见的数据库管理系统</strong></p><p>数据库市场上有许多数据库(DBMS)产品，<br>当前，例如:<br>■Oracle</p><p>■Microsoft SQL Server</p><p>■Sybase ASE</p><p>■IBM DB2</p><p>■Microsoft Access</p><p>■Visual FoxPro<br>它们各以自已特有的功能在数据库市场上占有席之地。</p><p>–员工表表</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## `select * from emp;`</span></span><br><span class="line"></span><br><span class="line">`<span class="keyword">select</span> * <span class="keyword">from</span> dept;`</span><br><span class="line">`<span class="comment">--工资表`</span></span><br><span class="line">`<span class="keyword">select</span> * <span class="keyword">from</span> salgrade;`</span><br><span class="line">`<span class="keyword">select</span> * <span class="keyword">from</span> bonus;`</span><br><span class="line">`<span class="comment">--查询员工表中的员工编号、姓名、工资` </span></span><br><span class="line">`<span class="keyword">select</span> empno,ename,sal <span class="keyword">from</span> emp;`</span><br><span class="line">`<span class="comment">--查询员工表中的员工编号、姓名、工资、年薪`</span></span><br><span class="line">`<span class="keyword">select</span> empno,ename,sal,sal*<span class="number">12</span> <span class="keyword">from</span> emp;`</span><br><span class="line">`<span class="comment">--别名  as可以省略`</span></span><br><span class="line">`<span class="keyword">select</span> empno <span class="keyword">as</span> 员工编号,ename <span class="keyword">as</span> 员工姓名 <span class="keyword">from</span> emp;`</span><br><span class="line"></span><br><span class="line">`<span class="keyword">select</span> empno 员工编号,ename 员工姓名,sal 月薪,sal*<span class="number">13</span> 年薪 <span class="keyword">from</span> emp;</span><br><span class="line"><span class="comment">--小写加""号</span></span><br><span class="line"><span class="keyword">select</span> empno <span class="string">"eo"</span> <span class="keyword">from</span> emp;</span><br><span class="line"><span class="comment">--在数据库中||做连接符相当于Java中的+号  必须单引号  </span></span><br><span class="line"><span class="keyword">select</span> ename ||<span class="string">'的月薪是'</span>||sal 间接 <span class="keyword">from</span> emp;</span><br><span class="line"><span class="comment">--去除重复行</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> sal <span class="keyword">from</span> emp;</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> ename,sal <span class="keyword">from</span> emp;</span><br><span class="line"><span class="comment">--排序 order by 排序  升序asc(默认)  降序desc  *代表所有</span></span><br><span class="line"><span class="keyword">select</span> *<span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">asc</span>;</span><br><span class="line"><span class="keyword">select</span> *<span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span>;</span><br><span class="line"><span class="keyword">select</span> *<span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">asc</span>,ename <span class="keyword">asc</span>;</span><br><span class="line"><span class="keyword">select</span> *<span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">asc</span>,ename <span class="keyword">desc</span>;</span><br><span class="line"><span class="keyword">select</span> *<span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> sal,ename ;</span><br><span class="line"><span class="keyword">select</span> ename 姓名，sal 工资，empno 编号 <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> 工资 <span class="keyword">asc</span>,姓名 <span class="keyword">asc</span>;</span><br><span class="line"><span class="comment">--查询A-B之间</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="keyword">between</span> <span class="number">800</span> <span class="keyword">and</span> <span class="number">1000</span>;`</span><br><span class="line">`<span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">where</span> sal &gt;=<span class="number">800</span> <span class="keyword">and</span> sal &lt;=<span class="number">1000</span>;`</span><br><span class="line">`<span class="comment">--in （集合）属于集合中的一个`</span></span><br><span class="line">`<span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="keyword">in</span>(<span class="number">800</span>,<span class="number">900</span>,<span class="number">1000</span>,<span class="number">1250</span>);`</span><br><span class="line">`<span class="keyword">select</span> *<span class="keyword">from</span> emp <span class="keyword">where</span> sal =<span class="number">800</span> <span class="keyword">or</span> sal=<span class="number">900</span>;</span><br><span class="line"><span class="comment">--查询奖金为空的人</span></span><br><span class="line"><span class="keyword">select</span>*<span class="keyword">from</span> emp <span class="keyword">where</span> comm <span class="keyword">is</span> <span class="literal">null</span>;`</span><br><span class="line">`<span class="keyword">select</span> *<span class="keyword">from</span> emp <span class="keyword">where</span> comm =<span class="string">''</span></span><br><span class="line"><span class="comment">--like 模糊查询</span></span><br><span class="line"><span class="keyword">select</span>*<span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span><span class="string">'s%'</span><span class="string">`</span></span><br><span class="line"><span class="string">`</span><span class="keyword">select</span>*<span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span><span class="string">'李%'</span><span class="comment">--李字开头的</span></span><br><span class="line"><span class="keyword">select</span>*<span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span><span class="string">'李__%'</span><span class="comment">--李xx`</span></span><br><span class="line"><span class="string">`--and or not 运算字符`</span></span><br><span class="line"><span class="string">`select*from emp where sal&gt;900 and ename like 's%'--查询工资大于900并且名字以s开头的</span></span><br><span class="line"><span class="string">select*from emp where sal&gt;900 or like 's%'--查询工资大于900或者名字以s开头的`</span></span><br><span class="line"><span class="string">`select*from emp where sal not in(800,900,1200)--查询工资除了800,900,1200</span></span><br><span class="line"><span class="string">select*from where ename not like 's%'--查询不以s开头的姓名`</span></span><br><span class="line"><span class="string">`--查询员工首字母大写`</span></span><br><span class="line"><span class="string">`select initcap(ename) from emp`</span></span><br><span class="line"><span class="string">`--查询员工首字母全部小写`</span></span><br><span class="line"><span class="string">`select lower(ename)from emp`</span></span><br><span class="line"><span class="string">`--查询员工首字母全部大写`</span></span><br><span class="line"><span class="string">`select upper(ename)from emp`</span></span><br><span class="line"><span class="string">`--左移除`</span></span><br><span class="line"><span class="string">`select ltrim('123admin','123')from emp`</span></span><br><span class="line"><span class="string">`--右移除`</span></span><br><span class="line"><span class="string">`select rtrim('123admin','admin')from emp--不写的话就是删除空格`</span></span><br><span class="line"><span class="string">`--翻译 translate`</span></span><br><span class="line"><span class="string">`select translate('jack','aj','12')from dual`</span></span><br><span class="line"><span class="string">`--替换 replace`</span></span><br><span class="line"><span class="string">`select replace('jack','a','b')from dual`</span></span><br><span class="line"><span class="string">`--查找出现的位置 instr（第一次出现的位置）`</span></span><br><span class="line"><span class="string">`select instr('admin','i',2)from dual`</span></span><br><span class="line"><span class="string">`--截取字符串substr 从第三位开始（包含第三）截取5个`</span></span><br><span class="line"><span class="string">`select substr('abcdefghi',3,5)from dual`</span></span><br><span class="line"><span class="string">`--字符串连接 concat`</span></span><br><span class="line"><span class="string">`select concat('admin','12345')from dual`</span></span><br><span class="line">          <span class="string">`--数值函数`</span></span><br><span class="line"><span class="string">`--1.绝对值`</span></span><br><span class="line"><span class="string">`select abs(-25)from dual`</span></span><br><span class="line"><span class="string">`--2.x的y次幂`</span></span><br><span class="line"><span class="string">`select power(2,3)from dual`</span></span><br><span class="line"><span class="string">`--3.向上取整`</span></span><br><span class="line"><span class="string">`select ceil(12.3)from dual`</span></span><br><span class="line"><span class="string">`--4.向下取整`</span></span><br><span class="line"><span class="string">`select floor(12.8)from dual`</span></span><br><span class="line"><span class="string">`--5.截断(保留小数点后两位)`</span></span><br><span class="line"><span class="string">`select trunc(12.156,2)from dual`</span></span><br><span class="line"><span class="string">`--6.四舍五入(保留小数点后两位)`</span></span><br><span class="line"><span class="string">`select round(12.156,2)from dual`</span></span><br><span class="line"><span class="string">`--7.开平方 sqrt`</span></span><br><span class="line"><span class="string">`select sqrt(4)from dual`</span></span><br><span class="line"><span class="string">`select power(8,1/3)from dual`</span></span><br><span class="line"></span><br><span class="line"><span class="string">`--8.取余 mod`</span></span><br><span class="line"><span class="string">`select mod(10,3)from dual`</span></span><br><span class="line"><span class="string">`--9.取等号 sign(括号里的正负)`</span></span><br><span class="line"><span class="string">`select sign(-25)from dual`</span></span><br><span class="line">                 <span class="string">`--日期函数`</span></span><br><span class="line"><span class="string">`--1.months_between两个日期之间相隔的月份(出生至现在)`</span></span><br><span class="line"><span class="string">`select months_between(sysdate,'5-2月-1995')from dual`</span></span><br><span class="line"><span class="string">`--2.add_months修改月份`</span></span><br><span class="line"><span class="string">`select add_months(sysdate,1)from dual`</span></span><br><span class="line"><span class="string">`--3.next_day返回指定日期后的一个星期几的日期（不包含当前）`</span></span><br><span class="line"><span class="string">`select next_day(sysdate,'星期六')from dual`</span></span><br><span class="line"><span class="string">`--4.last day返回指定日期这个月的最后一天`</span></span><br><span class="line"><span class="string">`select last_day(sysdate)from dual`</span></span><br><span class="line"><span class="string">`--5.日期四舍五入 round`</span></span><br><span class="line"><span class="string">`select round(sysdate,'YEAR')from dual`</span></span><br><span class="line"><span class="string">`select round(sysdate,'month')from dual`</span></span><br><span class="line"><span class="string">`select round(sysdate,'day')from dual`</span></span><br><span class="line"><span class="string">`--6.日期做截断 trunc`</span></span><br><span class="line"><span class="string">`select trunc(sysdate,'YEAR')from dual`</span></span><br><span class="line"><span class="string">`select trunc(sysdate,'month')from dual`</span></span><br><span class="line"><span class="string">`select trunc(sysdate,'day')from dual`</span></span><br><span class="line">              <span class="string">`--转型函数:`</span></span><br><span class="line"> <span class="string">`/*`</span></span><br><span class="line">              <span class="string">`to_number char--&gt;number\`</span></span><br><span class="line"><span class="string">              `</span><span class="keyword">to_date</span>   <span class="built_in">char</span><span class="comment">--&gt;date`</span></span><br><span class="line">              <span class="string">`to_char   number/date--&gt;char`</span></span><br><span class="line"><span class="string">`*/`</span></span><br><span class="line"></span><br><span class="line"><span class="string">`--1.to_char   日期转字符串`</span></span><br><span class="line"><span class="string">`select to_char(sysdate,'yyyy-mm-dd hh24:mi:ss')from dual`</span></span><br><span class="line"><span class="string">`--2.to_datee 字符串转日期`</span></span><br><span class="line"><span class="string">`select to_date('2017年8月16日 16点40分30秒','yyyy"年"mm"月"dd"日" hh24"点"mi"分"ss"秒"')from dual;`</span></span><br><span class="line"><span class="string">`--3.to_number字符串转数值类型`</span></span><br><span class="line"><span class="string">`select to_number('$12,025,87.01`</span><span class="string">','</span>$<span class="number">99</span>,<span class="number">999</span>,<span class="number">99.99</span><span class="string">')from dual</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">`--4.to_char 数值转字符串select to_char(1251212.25,'</span>L999,<span class="number">999</span>,<span class="number">99.99</span><span class="string">')from dual`</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">`--5.时间比较问题`</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">`select * from emp where hiredate&gt;'</span><span class="number">1</span><span class="number">-1</span>月<span class="number">-81</span><span class="string">'select * from emp where hiredate&gt;to_date('</span><span class="number">1981</span><span class="number">-1</span><span class="number">-1</span><span class="string">','</span>yyyy-mm-dd<span class="string">');select*from emp where to_char(hiredate,'</span>yyyy-mm-dd<span class="string">')&gt;'</span><span class="number">1981</span><span class="number">-1</span><span class="number">-1</span><span class="string">'`</span></span><br><span class="line"><span class="string">  -- 其他函数</span></span><br><span class="line"><span class="string">--1.nvl空转零</span></span><br><span class="line"><span class="string">select ename ,nvl(comm,0)from emp</span></span><br><span class="line"><span class="string">--2.nvl 2</span></span><br><span class="line"><span class="string">select nvl2(comm,'</span>有<span class="string">','</span>太惨了<span class="string">')from emp</span></span><br><span class="line"><span class="string">--4.case when then end</span></span><br><span class="line"><span class="string">`select(case when sal&gt;=5000 then '</span>有钱<span class="string">'`</span></span><br><span class="line"><span class="string">            `when sal&gt;=4000 then '</span>有钱<span class="number">1</span><span class="string">'`</span></span><br><span class="line"><span class="string">            `when sal&gt;=3000 then '</span>有钱<span class="number">2</span><span class="string">'`</span></span><br><span class="line"><span class="string">            `when sal&gt;=2000 then '</span>有钱<span class="number">3</span><span class="string">'`</span></span><br><span class="line"><span class="string">            `else'</span>穷<span class="string">' end)from emp`</span></span><br><span class="line"><span class="string">                    `--多行函数`</span></span><br><span class="line"><span class="string">`--1.sum max min avg count  sum()avg()适用于数值型   count()max()min()适用于任何类型数据`</span></span><br><span class="line"><span class="string">`select max(sal)from emp--最大工资`</span></span><br><span class="line"><span class="string">`select min(sal)from emp--最小工资`</span></span><br><span class="line"><span class="string">`select avg(sal)from emp--平均工资`</span></span><br><span class="line"><span class="string">`select sum(sal)from emp--工资和`</span></span><br><span class="line"><span class="string">`select count(*)from emp--多少个员工select max(sal),min(sal),avg(sal),count(*)from emp--聚合函数可以写在一行`</span></span><br><span class="line"><span class="string">`--聚合函数不可以和单行数据同时展示`</span></span><br><span class="line"><span class="string">`select ename,max(sal)from emp`</span></span><br><span class="line"><span class="string">`--count(*)统计所有select sum(sal)/count(*),avg(sal)from emp--count(exp)统计非空的exp的个数--count(distinct exp)统计非空不重复的exp的个数select count(sal),count(distinct sal)from emp``</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">版权声明：本文为CSDN博主「那些年我睡的女孩」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。</span></span><br><span class="line"><span class="string">原文链接：https://blog.csdn.net/qq_37736906/article/details/77279779</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">​     `查找`</span></span><br><span class="line"><span class="string">`1`</span></span><br><span class="line"><span class="string">`group by 子句将表中数据分成若干小组`</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">`语法格式`</span></span><br><span class="line"><span class="string">`select column, group_function(column)`</span></span><br><span class="line"><span class="string">`from table`</span></span><br><span class="line"><span class="string">`[where condition]`</span></span><br><span class="line"><span class="string">`[group by group_by_expression]`</span></span><br><span class="line"><span class="string">`[order by column];`</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">`例子` </span></span><br><span class="line"><span class="string">`--统计人数小于5的部门工资` </span></span><br><span class="line"><span class="string">`select avg(sal) from emp group by deptno having count(*)&lt;5` </span></span><br><span class="line"><span class="string">`--统计各部门的最高工资排除最高工资小于3000的部门` </span></span><br><span class="line"><span class="string">`select deptno,max(sal)from emp group by deptno having max(sal)&gt;=3000` </span></span><br><span class="line"><span class="string">`插入` </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">2. `往表中插入数据的语句是insert语句，方式有两种，一种是记录值的插入，一种是查询结果的插入` </span></span><br><span class="line"><span class="string">   `记录值的插入语法如下：` </span></span><br><span class="line"><span class="string">   `INSERT INTO table [(column [, column…])]` </span></span><br><span class="line"><span class="string">   `VALUES (value [, value…]);` </span></span><br><span class="line"><span class="string">   `一次插入操作只插入一行` </span></span><br><span class="line"><span class="string">   `例子` </span></span><br><span class="line"><span class="string">   `insert into emp values(9527,'</span>张三<span class="string">','</span>程序员<span class="string">',007,sysdate,20,null,10)--第一种方式常用` </span></span><br><span class="line"><span class="string">   `insert into emp(empno,ename,job)values(9528,'</span>张三丰<span class="string">','</span>武术教练<span class="string">')` </span></span><br><span class="line"><span class="string">   `select * from emp--显示插入后的效果` </span></span><br><span class="line"><span class="string">   `修改` </span></span><br><span class="line"><span class="string">   `Update语句用于修改基本表中元组的某些列，其语法如下：` </span></span><br><span class="line"><span class="string">   `UPDATE table` </span></span><br><span class="line"><span class="string">   `SET column = value [, column = value] …` </span></span><br><span class="line"><span class="string">   `[WHERE condition];` </span></span><br><span class="line"><span class="string">   `其语义是：修改基本表中满足条件表达式的那些元组的列值，需修改的列值在set子句中指出` </span></span><br><span class="line"><span class="string">   `例子`</span></span><br></pre></td></tr></tbody></table></figure><p>   –修改<br>   </p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">   `<span class="keyword">update</span> emp <span class="keyword">set</span> ename=<span class="string">'张四丰'</span> <span class="keyword">where</span> ename=<span class="string">'FORD'</span><span class="string">`</span></span><br><span class="line"><span class="string">   `</span><span class="keyword">select</span> * <span class="keyword">from</span> emp<span class="string">`</span></span><br><span class="line"><span class="string">   `</span><span class="comment">--把部门为20的所有员工20加500`</span></span><br><span class="line">   <span class="string">`update emp set sal=sal+500 where deptno=20`</span></span><br><span class="line">   <span class="string">`select * from emp`</span></span><br><span class="line"></span><br><span class="line">​     <span class="string">`删除`</span></span><br><span class="line"></span><br><span class="line">​          <span class="string">`删除`</span></span><br><span class="line"> <span class="string">`--删除9528数据`</span></span><br><span class="line"> <span class="string">`delete temp where empno=9528`</span></span><br><span class="line">​    <span class="string">`--输出全部`</span></span><br><span class="line"> <span class="string">`delete temp</span></span><br></pre></td></tr></tbody></table></figure><p></p><p> 数据库的删除请注意<br>————————————————<br>版权声明：本文为CSDN博主「那些年我睡的女孩」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_37736906/article/details/77341402" target="_blank" rel="noopener">https://blog.csdn.net/qq_37736906/article/details/77341402</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;MySQL基础&quot;&gt;&lt;a href=&quot;#MySQL基础&quot; class=&quot;headerlink&quot; title=&quot;MySQL基础&quot;&gt;&lt;/a&gt;MySQL基础&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;与数据库有关的几个概念:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.数据(Data):可以
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>java面向对象知识点总结</title>
    <link href="http://yoursite.com/2019/10/11/java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2019/10/11/java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/</id>
    <published>2019-10-11T07:05:06.000Z</published>
    <updated>2019-11-13T02:35:31.266Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h2><p>1,什么是类?什么是对象?<br>简单来说,类是抽象出某一类事物的行为和特征,并进行的封装,特征称之为属性,行为称之为方法;<br>对象就是这一类的具体实例,对象拥有这个类的所有属性和方法</p><p>举个例子:<br>所有的人是一个类,人所具有的属性:身高和体重…,人具有的方法:吃饭,睡觉..<br>具体到某一个人是一个对象,比如小明就是一个对象,小明有身高,体重,可以吃饭,可以睡觉..</p><p>java编程思想中是这么描述对象的:<br>对象具有状态,行为,和标识.这意味着每一个对象都可以拥有内部数据(它们给出了该对象的状态)和方法(它们产生行为),并且每一个对象都可以与其他对象区分开来,具体来说,就是每一个对象在内存中都有一个唯一的地址.</p><p>2,什么是面向对象?为什么要面向对象?<br>官方话:<br>面向对象（Object Oriented）是一种新兴的程序设计方法，或者是一种新的程序设计规范(paradigm)，其基本思想是使用对象、类、继承、封装、多态等基本概念来进行程序设计。从现实世界中客观存在的事物（即对象）出发来构造软件系统，并且在系统构造中尽可能运用人类的自然思维方式。面向对象是为了解决系统的可维护性，可扩展性，可重用性….<br>我的理解:<br>首先,面向对象是一种设计程序的方式,是一种设计思想.<br>其次,面向对象节省代码,思路清晰,便于扩展.你所创建出的对象就是给你提供服务的.</p><h2 id="第二章-类和对象的创建"><a href="#第二章-类和对象的创建" class="headerlink" title="第二章 类和对象的创建"></a>第二章 类和对象的创建</h2><p>概念：面向对象就是把一个项目，一个事情分成更小的项目，或者说分成一个个更小的部分，每一部分负责什么方面的功能，最后再由这些部分组合而成为一个整体。<br>好处：面相对象更接近实物的本质，提高代码的复用更具有扩展性。<br>如何使用：通常是创建类的对象再给属性赋值。<br>构造方法：构造方法的名称和类名相同，没有返回值类型。<br>GO g=new GO();<br>构造方法的重载：方法名相同，参数列表（个数，类型，顺序）不同，这是构造方法的重载。<br>如果一个类中包含了两个或两个以上的方法，他们方法名相同，方法参数个数或者参数类型不同，则称该方法被重载了，这个过程是方法重载。<br>构造方法在什么时候执行：<br>New出对象；<br>在继承中执行super();<br>做一些初始化操作<br>Static：<br>可以用来修饰属性，方法和代码块，静态方法中不能使用this和super关键字。<br>类名.属性  类名.方法 </p><h2 id="第三章-封装"><a href="#第三章-封装" class="headerlink" title="第三章 封装"></a>第三章 封装</h2><p>概念：封装指的是将对象的状态信息隐藏在对象内部，不允许外部程序直接访问对象内部信息，而是通过该类所提供的方法来实现对内部信息的操作访问。</p><p>封装的必要步骤：</p><p>属性私有化private；</p><p>为属性设置set和get方法；</p><p>调用set和get方法；</p><p>好处（作用）：提高了安全性   提高了复用性  提高了实现细节(隐藏实现细节)</p><p>访问权限：</p><p>Public :权限最高，在项目不管声明情况下都可访问</p><p>Private：私有的，权限最低，只能在一个类才能访问</p><p>Protected：安全的，同包下可以进行访问</p><p>Default默认的，同包下可以访问，继承不可访问</p><p>this关键字</p><p>指代当前对象；</p><p>在同一个类中，this.属性  this.方法</p><p>注意事项：类的属性中均用private来修饰  定义概念：封装指的是将对象的状态信息隐藏在对象内部，不允许外部程序直接访问对象内部信息，而是通过该类所提供的方法来实现对内部信息的操作访问。<br>封装的必要步骤：<br>属性私有化private；<br>为属性设置set和get方法；<br>调用set和get方法；<br>好处（作用）：提高了安全性   提高了复用性  提高了实现细节(隐藏实现细节)<br>访问权限：<br>Public :权限最高，在项目不管声明情况下都可访问<br>Private：私有的，权限最低，只能在一个类才能访问<br>Protected：安全的，同包下可以进行访问<br>Default默认的，同包下可以访问，继承不可访问</p><p>this关键字<br>指代当前对象；<br>在同一个类中，this.属性  this.方法<br>注意事项：类的属性中均用private来修饰  定义geter和seter方法()和seter()方法</p><h2 id="第四章-继承"><a href="#第四章-继承" class="headerlink" title="第四章 继承"></a>第四章 继承</h2><p>概念：比如FeiGe快递系统中有三个实体类Person（人），Courier（快递员）,Customer（客户）类，Courier,Customer都属于（派生类）Person，所以都继承（extends）自Person类。<br>好处：提高了代码的重用性  提高了代码的扩展性<br>语法：class 类名 extends父接口{<br>   //属性定义<br>   //方法定义}<br>注意事项：1.子类继承父类所以的属性和方法，只不过只能调用非Private属性和方法2.java中的继承只支持单继承，意思是一个子类只能继承一个父类，但是允许多层继承<br>继承中的构造方法：调用父类中的构造方法，<br>需用到关键字super super指代父类<br>重写的概念：在继承的关系中。子类会自动继承父类中定义的方法，但有时子类中需要对继承的方法进行一些修改，即对父类的方法进行重写。<br>语法：void 方法名（）{}<br>注意事项：子类重写父类的方法时，不能使用比父类中被重写的方法更严格的访问权限，重写方法和被重写方法必须具有相同的方法名，相同的参数列表和相同的返回值类型，重写方法的访问修饰符必须大于被重写方法的访问修饰符，否则就不能被称为方法的重写。<br>异常的处理：在程序执行代码的时候万一发生了异常，程序会按照预定的处理方法对异常进行处理，异常处理完毕之后，程序继续运行。<br>语法：5个关键字 try catch finally throw throws<br>常见的异常类型<br>Exception 异常层次的根类 ArithmeticException  算术错误情形，如以零作除数<br>ArrayIndexOutOfBoundsException  数组下标越界<br>NullPointerException空指针异常<br>ClassNotFoundException不能加载所需的类<br>InputMismatchException得到的数据类型与实际输入的类型不匹配<br>llegalArgumentException方法接收到非法参数</p><p>ClassCastException对象强制类型转换出错<br>NumberFormatException数字格式转换异常，如把“abc”转换成数字</p><h2 id="第五章-多态"><a href="#第五章-多态" class="headerlink" title="第五章 多态"></a>第五章 多态</h2><p>概念：指允许不同类的对象对同一消息做出响应即同同一消息可以根据发送对象的不同而采用多种不同的行为方式。<br>好处：可替换性 可扩充性 接口性 灵活性 简化性<br>多态的使用：<br>子类向父类转换称为向上转型<br>向上转型：&lt;父类型&gt;&lt;引用变量名&gt;=new&lt;子类型&gt;（）；<br>将一个指向子类对象的父类引用赋给一个子类的引用，即将父类类型转换子类类型，称为向下转型，此时必须进行强制类型转换。<br>向下转型：&lt;子类型&gt;&lt;引用变量名&gt;=（&lt;子类型&gt;）&lt;父类型的引用变量&gt;；<br>运算符：instanceof  进行类型的判断<br>Try-catch-finally 如果try中的所有语句正常执行完毕那么finally块就会被执行<br> 多重catch 一段代码会出现多种异常这时可以在try语句后写多个catch语句块</p><h2 id="第六章-抽象"><a href="#第六章-抽象" class="headerlink" title="第六章 抽象"></a>第六章 抽象</h2><p>概念：如果一个类没有足够的信息去描述一个具体的对象那我们就称之为抽象类</p><p>语法：public abstract class类名{}</p><p>作用：抽象类是用来继承的比普通类更通用</p><p>抽象方法：abstract修饰没有方法体之声明返回的数据类型 方法名称和所需要的参数</p><p>语法 ：public abstract 返回值类型 方法名（参数列表）；</p><p>注意事项：包含抽象方法的类一定是抽象类  抽象类中不一定都是抽象方法  构造方法不能生命为抽象方法  abstract不能与private static final native 并列修饰同一个方法</p><p>Final 修饰类 被final修饰过的类不能被继承 因为不能被继承所以此类中所有方法都是final修饰   该类如果不需要有子类不需要被扩展类的方法不允许被重写就用final修饰该类</p><p>Throws通过try-catch捕获处理异常</p><h2 id="第七章-接口"><a href="#第七章-接口" class="headerlink" title="第七章 接口"></a>第七章 接口</h2><p>概述：在软件中接口是一种规范和标准他们可以约束类的行为是一些方法特征的集合但是没有方法的实现</p><p>语法：</p><p>【修饰符】interface接口名extends父接口1，父接口2……{//常量定义//方法定义}</p><p>Class类名extends父类名implements接口1，接口2….{//类成员}</p><p>Run（）；方法提供服务</p><p>接口是一种能力接口是一种约定</p><p>抛出异常：throw 除系统自动抛出异常可以用throw自动抛出异常</p><p>Throw在程序中抛出异常throws在方法内抛出异常</p><p>Java不支持多继承性，即一个子类只能有一个父类；单继承使得java简单，易于管理，但如果要克服单继承性的缺点就要使用接口技术，是一个类可以实现多个接口，用关键字interface关键字来定义一个接口。</p><p>（1）接口声明：interface 接口名；    接口体:包括常量定义和方法定义，方法只允许声明不允许实现。</p><p>（2）接口使用：class A implements print,add       或者  class A extends A1 implements print,add</p><p>（3）当某个类使用接口的时候，必须给出所有方法的实现，方法的类型、参数一定要和接口的一致；接口的方法默认为public abstract，故类在实现时一定不能漏写public关键字；接口常量默认关键字为public static。</p><p>（4）因为接口中只含有public static final 常量和public abstract方法，故在写接口的时候可以省略这些关键字。</p><p>（5）如果接口的返回类型不是void，那么实现方法体的时候，至少要有一个return语句；如果接口的返回类型是void，可以除了大括号之外可以没有任何语句。</p><p>（6）Java提供的接口都在相应的包中，可以通过引入包使用相应的接口；也可以自定义接口，一个源文件就是由类和接口来组成的。</p><p>（7）类实现的接口的方法以及接口中的常量可以通过类的对象进行调用，常量也可以通过类名和接口名进行调用。</p><p>（8）接口声明的时候，如果加上关键字public，那么接口可以被任一个类进行调用，如果没有public则为友好型接口，只能被同一个包内的类进行调用。</p><p>（9）如果父类使用某个接口，那么子类也就使用了接口，不用再使用implements。</p><p>（10）接口可以通过extends继承接口。</p><p>（11）如果一个类声明实现一个接口但没有实现接口的所有方法，那么这个类一定得是abstract类。</p><h2 id="第八章-集合框架"><a href="#第八章-集合框架" class="headerlink" title="第八章 集合框架"></a>第八章 集合框架</h2><p>集合框架使用方便的接口和类都在java.util包中</p><p>集合框架的特点：</p><p>长度  数组长度是固定的集合长度是可变的</p><p>存储对象 数组可以存储基本的数据类型，也可以存储对象的引用 集合只能用于存储对象的引用</p><p>对象类型 数组必须是相同类型的数据  对象可以是不同类型</p><p>  接口区别：</p><p>Collection接口存储组 不唯一(允许重复)、 无序的对象。<br> Set接口继承Collection接口，存储-组唯一(不允许重复)、 无序的对象。<br> List接口继承Collection接口，存储组不唯-(允许重复)、 有序(以元素插入的次序来放置无素，不会重新排列)的对象<br> Map接口存储组成对的键 值对象，提供key(键)到value(值)的映射。Map中的key不要求有序，不允许重复。value 同样不要求有序，但允许重复。</p><p>List接口：</p><p>实现List接口的常用类有ArayList和Lnkedist.它们都可以容纳所有类型的对象，包括nll允许重复，并且都保证元素的存储顺序。<br> ArrayList和LinkedList的大致区别:<br> arraylist是实现了基于动态数组的数据结构，LinkedList基于链表的数据结构对于随机访问get和set, ArrayList 优于LinkedList, 因为LinkedList要移动指针。<br> 对于新增和删除操作add和remove, LinkedList 比较占优势，因为ArrayList要移动数据。</p><p>list接口定义中的格各种常用方法</p><p>boolean add(Object o)在列表末尾顺序添加元素，起始索引位置从0开始<br> int size()返回列表中的元素个数<br> void add(int index,Objecto)在指定的索 引位置添加元素，原索引位置及其后面的元素依次后移<br> 注意:新添加元素的索引位置必须介于0和列表中元素个数之间</p><p>0bject get(int index)返回指定索引位置处的元素<br> 注意:取出的元素是Object类型，使用前需要进行强制类型转换<br> boolean contains(Object o)判断列表中是否存在指定元素<br> boolean remove(Object o)从列表中删除元素<br> Object remove(int index)从列表中删除指定位置元素，起始索引位置从0开始</p><p>Linkedlist的一些特殊用法<br> void addFirst(Object o)在列表的首部添加元素<br> void addLast(Object o)在列表的末尾添加元素<br> Object getFirst( )返回列表中的第一” 个元素<br> Object getLast( )返回列表中的最后一个元素<br> Object removeFirst( )删除并返回列表中的第一个元素</p><p>Set接口</p><p>Hashset的优点就是各方面都很快但数据是无序的</p><p>Threeset优点是有序而且可以按照升序方式进行排序，但是其他各方面不突出</p><p>Map接口</p><p>Object put （object key，object value）以“键一值对”的方式进行存储<br> 如果武图添加重复的<br> 键，那么最后加入的“键-值对”将替换掉原先的“键一道<br> 对”<br> Object get (Object key)根据键返回相关联的值，若不存在指定的键，则返回null</p><p>Object remove (Object key)删除指定的键映射的“键一值对”<br> int size()返回元素个数<br> Set keySet()返回键的集合<br> Collection values( )返回值的集合<br> boolean containsKey (Object key)若存在指定的键映射的“键值对”，则返回true<br> boolean isEmpty( )若不存在键一值映射关系，则返回true<br> void clear()从此映射中移除所有映射关系<br> 泛型集合：list  ArrayList</p><p>ArrayL ist&lt;0bject&gt; list=new ArrayL ist&lt;0bject&gt;() ;</p><p>list. add (0);</p><p>list. add(99.9);</p><p>list. add(false);</p><p> 使用泛型集合在创建集合对象时指定集合中元素的类型，从集合中取出元素时无须进行类型强制转换，并且如果把非指定类型对象放入集合，会出现编译错误。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;第一章&quot;&gt;&lt;a href=&quot;#第一章&quot; class=&quot;headerlink&quot; title=&quot;第一章&quot;&gt;&lt;/a&gt;第一章&lt;/h2&gt;&lt;p&gt;1,什么是类?什么是对象?&lt;br&gt;简单来说,类是抽象出某一类事物的行为和特征,并进行的封装,特征称之为属性,行为称之为方法;&lt;br&gt;
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
